---

name: taiga-org-gh-actions-packages

inputs:
  new_version:
    description: 'New version to set in package.json'
    required: true
    type: string
secrets:
  GH_APP_PRIVATE_KEY:
    required: true

jobs:
  update_version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Get Token
      id: get_workflow_token
      uses: peter-murray/workflow-application-token-action@v3
      with:
        application_id: ${{ vars.APP_ID }}
        application_private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      
    - name: Checkout repository
      id: checkout_repo
      uses: actions/checkout@v4
      with: 
        token: ${{ steps.get_workflow_token.outputs.token }}

    - name: Check if version format is valid
      id: check_version_format
      run: |
        if [[ ! "${{ inputs.new_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: ${{ inputs.new_version }}. Expected format: X.Y.Z"
          exit 1
        else
          echo "Version format is valid: ${{ inputs.new_version }}"
        fi

    - name: Check if version already exists
      id: check_version
      if: steps.checkout_repo.conclusion == 'success'
      run: |
        echo "Checking for version: v${{ inputs.new_version }}"
        git fetch --tags
        if git rev-parse "refs/tags/v${{ inputs.new_version }}" >/dev/null 2>&1; then
          echo "Version v${{ inputs.new_version }} already exists."
          exit 1
        else
          echo "Version v${{ inputs.new_version }} does not exist."
        fi

    - name: Update version in package.json
      id: update_package_json
      if: steps.check_version.conclusion == 'success'
      run: |
        jq --arg new_version "${{ inputs.new_version }}" '.version = $new_version' package.json > tmp.json && mv tmp.json package.json

    - name: Commit and push changes
      id: commit_push
      if: steps.update_package_json.conclusion == 'success'
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git add package.json
        git commit -m "Update version of package.json"
        git push
      env:
        GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          
    - name: Push a new tag for deployment
      if: steps.commit_push.conclusion == 'success'
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout main
        git pull origin main
        git tag v${{ inputs.new_version }}
        git push origin v${{ inputs.new_version }}